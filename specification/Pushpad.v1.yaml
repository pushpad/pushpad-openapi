openapi: "3.1.0"

info:
  title: Pushpad API
  version: "1.0"
  description: |
    The Pushpad API allows you to send web push notifications and manage resources
    within your Pushpad account in a simple way using HTTP requests.
    All of the functionality that you are familiar with in the Pushpad
    dashboard is also available through the API.
  license:
    name: Apache 2.0
    url: "https://opensource.org/license/apache-2-0"
  contact:
    name: Pushpad Support
    email: support@pushpad.xyz
  termsOfService: "https://pushpad.xyz/tos"

servers:
  - url: "https://pushpad.xyz/api/v1"
    description: production
    
components:
  securitySchemes:
    TokenAuth:
      type: http
      scheme: Token
      description: |
        Authentication with access token (API key).

        Example header:
        `Authorization: Token token="YOUR_ACCESS_TOKEN"`

security:
  - TokenAuth: []

tags:
  - name: Notifications
    description: |
      A notification is a web push notification sent with Pushpad.
      
      A notification includes some content (title, body, image, etc.),
      the target URL that is opened after a click, and many other options.
      
      You can create notifications that are sent immediately 
      or scheduled notifications that are sent in the future.
      
      A notification can be sent to all subscribers or to some of them,
      by using the targeting options (uids and tags).
      
      You can also get stats about the sending status and clicks for each notification.
      Or you can aggregate the stats for many notifications using the custom metrics.
      
      By sending requests to the Notifications endpoint, you can
      create, read or delete notifications.

  - name: Subscriptions
    description: |
      A subscription is a subscription to notifications.
      
      You have a subscription for each browser that receives your push notifications.
      
      A subscription includes the endpoint (URL) and keys used to send the notifications
      to a browser. It can also include optional data, like a user ID (uid) and 
      tags that can be used to find that subscription and send notifications to
      that subscriber.
      
      By sending requests to the Subscriptions endpoint, you can
      create, read, update or delete subscriptions.

  - name: Projects
    description: |
      A project is a project on Pushpad.
      
      A project includes notifications, subscriptions, settings and stats.
      
      Usually you have a project for each website that sends notifications.
      A domain can also use multiple projects,
      but they must be associated to the same sender.
      
      You can add multiple members with limited access to a project.
      
      By sending requests to the Projects endpoint, you can
      create, read, update or delete projects.

  - name: Senders
    description: |
      A sender is the owner of the subscriptions and the signer of the notifications.
      
      It includes the VAPID keys used for Web Push.
      
      Each sender can have one or more projects.
      
      By sending requests to the Senders endpoint, you can
      create, read, update or delete senders.

paths:
  /projects/{project_id}/notifications:
    get:
      $ref: "resources/notifications/notifications_list.yml"
    post:
      $ref: "resources/notifications/notifications_create.yml"
  /notifications/{notification_id}:
    get:
      $ref: "resources/notifications/notifications_get.yml"
  /notifications/{notification_id}/cancel:
    delete:
      $ref: "resources/notifications/notifications_cancel.yml"

  /projects/{project_id}/subscriptions:
    get:
      $ref: "resources/subscriptions/subscriptions_list.yml"
    post:
      $ref: "resources/subscriptions/subscriptions_create.yml"
  /projects/{project_id}/subscriptions/{subscription_id}:
    get:
      $ref: "resources/subscriptions/subscriptions_get.yml"
    patch:
      $ref: "resources/subscriptions/subscriptions_update.yml"
    delete:
      $ref: "resources/subscriptions/subscriptions_delete.yml"
  
  /projects:
    get:
      $ref: "resources/projects/projects_list.yml"
    post:
      $ref: "resources/projects/projects_create.yml"
  /projects/{project_id}:
    get:
      $ref: "resources/projects/projects_get.yml"
    patch:
      $ref: "resources/projects/projects_update.yml"
    delete:
      $ref: "resources/projects/projects_delete.yml"

  /senders:
    get:
      $ref: "resources/senders/senders_list.yml"
    post:
      $ref: "resources/senders/senders_create.yml"
  /senders/{sender_id}:
    get:
      $ref: "resources/senders/senders_get.yml"
    patch:
      $ref: "resources/senders/senders_update.yml"
    delete:
      $ref: "resources/senders/senders_delete.yml"
